{
  "version": 3,
  "sources": ["../../use-sync-external-store/cjs/use-sync-external-store-shim.development.js", "../../use-sync-external-store/shim/index.js", "../../mobx-react-lite/src/utils/assertEnvironment.ts", "../../mobx-react-lite/src/utils/reactBatchedUpdates.ts", "../../mobx-react-lite/src/utils/observerBatching.ts", "../../mobx-react-lite/src/utils/utils.ts", "../../mobx-react-lite/src/useObserver.ts", "../../mobx-react-lite/src/utils/printDebugValue.ts", "../../mobx-react-lite/src/staticRendering.ts", "../../mobx-react-lite/src/utils/UniversalFinalizationRegistry.ts", "../../mobx-react-lite/src/utils/observerFinalizationRegistry.ts", "../../mobx-react-lite/src/observer.ts", "../../mobx-react-lite/src/ObserverComponent.ts", "../../mobx-react-lite/src/useLocalObservable.ts", "../../mobx-react-lite/src/useLocalStore.ts", "../../mobx-react-lite/src/useAsObservableSource.ts", "../../mobx-react-lite/src/index.ts"],
  "sourcesContent": ["/**\r\n * @license React\r\n * use-sync-external-store-shim.development.js\r\n *\r\n * Copyright (c) Meta Platforms, Inc. and affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\n\"use strict\";\r\n\"production\" !== process.env.NODE_ENV &&\r\n  (function () {\r\n    function is(x, y) {\r\n      return (x === y && (0 !== x || 1 / x === 1 / y)) || (x !== x && y !== y);\r\n    }\r\n    function useSyncExternalStore$2(subscribe, getSnapshot) {\r\n      didWarnOld18Alpha ||\r\n        void 0 === React.startTransition ||\r\n        ((didWarnOld18Alpha = !0),\r\n        console.error(\r\n          \"You are using an outdated, pre-release alpha of React 18 that does not support useSyncExternalStore. The use-sync-external-store shim will not work correctly. Upgrade to a newer pre-release.\"\r\n        ));\r\n      var value = getSnapshot();\r\n      if (!didWarnUncachedGetSnapshot) {\r\n        var cachedValue = getSnapshot();\r\n        objectIs(value, cachedValue) ||\r\n          (console.error(\r\n            \"The result of getSnapshot should be cached to avoid an infinite loop\"\r\n          ),\r\n          (didWarnUncachedGetSnapshot = !0));\r\n      }\r\n      cachedValue = useState({\r\n        inst: { value: value, getSnapshot: getSnapshot }\r\n      });\r\n      var inst = cachedValue[0].inst,\r\n        forceUpdate = cachedValue[1];\r\n      useLayoutEffect(\r\n        function () {\r\n          inst.value = value;\r\n          inst.getSnapshot = getSnapshot;\r\n          checkIfSnapshotChanged(inst) && forceUpdate({ inst: inst });\r\n        },\r\n        [subscribe, value, getSnapshot]\r\n      );\r\n      useEffect(\r\n        function () {\r\n          checkIfSnapshotChanged(inst) && forceUpdate({ inst: inst });\r\n          return subscribe(function () {\r\n            checkIfSnapshotChanged(inst) && forceUpdate({ inst: inst });\r\n          });\r\n        },\r\n        [subscribe]\r\n      );\r\n      useDebugValue(value);\r\n      return value;\r\n    }\r\n    function checkIfSnapshotChanged(inst) {\r\n      var latestGetSnapshot = inst.getSnapshot;\r\n      inst = inst.value;\r\n      try {\r\n        var nextValue = latestGetSnapshot();\r\n        return !objectIs(inst, nextValue);\r\n      } catch (error) {\r\n        return !0;\r\n      }\r\n    }\r\n    function useSyncExternalStore$1(subscribe, getSnapshot) {\r\n      return getSnapshot();\r\n    }\r\n    \"undefined\" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ &&\r\n      \"function\" ===\r\n        typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart &&\r\n      __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(Error());\r\n    var React = require(\"react\"),\r\n      objectIs = \"function\" === typeof Object.is ? Object.is : is,\r\n      useState = React.useState,\r\n      useEffect = React.useEffect,\r\n      useLayoutEffect = React.useLayoutEffect,\r\n      useDebugValue = React.useDebugValue,\r\n      didWarnOld18Alpha = !1,\r\n      didWarnUncachedGetSnapshot = !1,\r\n      shim =\r\n        \"undefined\" === typeof window ||\r\n        \"undefined\" === typeof window.document ||\r\n        \"undefined\" === typeof window.document.createElement\r\n          ? useSyncExternalStore$1\r\n          : useSyncExternalStore$2;\r\n    exports.useSyncExternalStore =\r\n      void 0 !== React.useSyncExternalStore ? React.useSyncExternalStore : shim;\r\n    \"undefined\" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ &&\r\n      \"function\" ===\r\n        typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop &&\r\n      __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(Error());\r\n  })();\r\n", "'use strict';\r\n\r\nif (process.env.NODE_ENV === 'production') {\r\n  module.exports = require('../cjs/use-sync-external-store-shim.production.js');\r\n} else {\r\n  module.exports = require('../cjs/use-sync-external-store-shim.development.js');\r\n}\r\n", "import { makeObservable } from \"mobx\"\r\nimport { useState } from \"react\"\r\n\r\nif (!useState) {\r\n    throw new Error(\"mobx-react-lite requires React with Hooks support\")\r\n}\r\nif (!makeObservable) {\r\n    throw new Error(\"mobx-react-lite@3 requires mobx at least version 6 to be available\")\r\n}\r\n", "export { unstable_batchedUpdates } from \"react-dom\"\r\n", "import { configure } from \"mobx\"\r\n\r\nexport function defaultNoopBatch(callback: () => void) {\r\n    callback()\r\n}\r\n\r\nexport function observerBatching(reactionScheduler: any) {\r\n    if (!reactionScheduler) {\r\n        reactionScheduler = defaultNoopBatch\r\n        if (\"production\" !== process.env.NODE_ENV) {\r\n            console.warn(\r\n                \"[MobX] Failed to get unstable_batched updates from react-dom / react-native\"\r\n            )\r\n        }\r\n    }\r\n    configure({ reactionScheduler })\r\n}\r\n\r\nexport const isObserverBatched = () => {\r\n    if (\"production\" !== process.env.NODE_ENV) {\r\n        console.warn(\"[MobX] Deprecated\")\r\n    }\r\n\r\n    return true\r\n}\r\n", "const deprecatedMessages: string[] = []\r\n\r\nexport function useDeprecated(msg: string) {\r\n    if (!deprecatedMessages.includes(msg)) {\r\n        deprecatedMessages.push(msg)\r\n        console.warn(msg)\r\n    }\r\n}\r\n", "import { Reaction } from \"mobx\"\r\nimport React from \"react\"\r\nimport { printDebugValue } from \"./utils/printDebugValue\"\r\nimport { isUsingStaticRendering } from \"./staticRendering\"\r\nimport { observerFinalizationRegistry } from \"./utils/observerFinalizationRegistry\"\r\nimport { useSyncExternalStore } from \"use-sync-external-store/shim\"\r\n\r\n// Do not store `admRef` (even as part of a closure!) on this object,\r\n// otherwise it will prevent GC and therefore reaction disposal via FinalizationRegistry.\r\ntype ObserverAdministration = {\r\n    reaction: Reaction | null // also serves as disposed flag\r\n    onStoreChange: Function | null // also serves as mounted flag\r\n    // stateVersion that 'ticks' for every time the reaction fires\r\n    // tearing is still present,\r\n    // because there is no cross component synchronization,\r\n    // but we can use `useSyncExternalStore` API.\r\n    // TODO: optimize to use number?\r\n    stateVersion: any\r\n    name: string\r\n    // These don't depend on state/props, therefore we can keep them here instead of `useCallback`\r\n    subscribe: Parameters<typeof React.useSyncExternalStore>[0]\r\n    getSnapshot: Parameters<typeof React.useSyncExternalStore>[1]\r\n}\r\n\r\nfunction createReaction(adm: ObserverAdministration) {\r\n    adm.reaction = new Reaction(`observer${adm.name}`, () => {\r\n        adm.stateVersion = Symbol()\r\n        // onStoreChange won't be available until the component \"mounts\".\r\n        // If state changes in between initial render and mount,\r\n        // `useSyncExternalStore` should handle that by checking the state version and issuing update.\r\n        adm.onStoreChange?.()\r\n    })\r\n}\r\n\r\nexport function useObserver<T>(render: () => T, baseComponentName: string = \"observed\"): T {\r\n    if (isUsingStaticRendering()) {\r\n        return render()\r\n    }\r\n\r\n    const admRef = React.useRef<ObserverAdministration | null>(null)\r\n\r\n    if (!admRef.current) {\r\n        // First render\r\n        const adm: ObserverAdministration = {\r\n            reaction: null,\r\n            onStoreChange: null,\r\n            stateVersion: Symbol(),\r\n            name: baseComponentName,\r\n            subscribe(onStoreChange: () => void) {\r\n                // Do NOT access admRef here!\r\n                observerFinalizationRegistry.unregister(adm)\r\n                adm.onStoreChange = onStoreChange\r\n                if (!adm.reaction) {\r\n                    // We've lost our reaction and therefore all subscriptions, occurs when:\r\n                    // 1. Timer based finalization registry disposed reaction before component mounted.\r\n                    // 2. React \"re-mounts\" same component without calling render in between (typically <StrictMode>).\r\n                    // We have to recreate reaction and schedule re-render to recreate subscriptions,\r\n                    // even if state did not change.\r\n                    createReaction(adm)\r\n                    // `onStoreChange` won't force update if subsequent `getSnapshot` returns same value.\r\n                    // So we make sure that is not the case\r\n                    adm.stateVersion = Symbol()\r\n                }\r\n\r\n                return () => {\r\n                    // Do NOT access admRef here!\r\n                    adm.onStoreChange = null\r\n                    adm.reaction?.dispose()\r\n                    adm.reaction = null\r\n                }\r\n            },\r\n            getSnapshot() {\r\n                // Do NOT access admRef here!\r\n                return adm.stateVersion\r\n            }\r\n        }\r\n\r\n        admRef.current = adm\r\n    }\r\n\r\n    const adm = admRef.current!\r\n\r\n    if (!adm.reaction) {\r\n        // First render or reaction was disposed by registry before subscribe\r\n        createReaction(adm)\r\n        // StrictMode/ConcurrentMode/Suspense may mean that our component is\r\n        // rendered and abandoned multiple times, so we need to track leaked\r\n        // Reactions.\r\n        observerFinalizationRegistry.register(admRef, adm, adm)\r\n    }\r\n\r\n    React.useDebugValue(adm.reaction!, printDebugValue)\r\n\r\n    useSyncExternalStore(\r\n        // Both of these must be stable, otherwise it would keep resubscribing every render.\r\n        adm.subscribe,\r\n        adm.getSnapshot,\r\n        adm.getSnapshot\r\n    )\r\n\r\n    // render the original component, but have the\r\n    // reaction track the observables, so that rendering\r\n    // can be invalidated (see above) once a dependency changes\r\n    let renderResult!: T\r\n    let exception\r\n    adm.reaction!.track(() => {\r\n        try {\r\n            renderResult = render()\r\n        } catch (e) {\r\n            exception = e\r\n        }\r\n    })\r\n\r\n    if (exception) {\r\n        throw exception // re-throw any exceptions caught during rendering\r\n    }\r\n\r\n    return renderResult\r\n}\r\n", "import { getDependencyTree, Reaction } from \"mobx\"\r\n\r\nexport function printDebugValue(v: Reaction) {\r\n    return getDependencyTree(v)\r\n}\r\n", "let globalIsUsingStaticRendering = false\r\n\r\nexport function enableStaticRendering(enable: boolean) {\r\n    globalIsUsingStaticRendering = enable\r\n}\r\n\r\nexport function isUsingStaticRendering(): boolean {\r\n    return globalIsUsingStaticRendering\r\n}\r\n", "export declare class FinalizationRegistryType<T> {\r\n    constructor(finalize: (value: T) => void)\r\n    register(target: object, value: T, token?: object): void\r\n    unregister(token: object): void\r\n}\r\n\r\ndeclare const FinalizationRegistry: typeof FinalizationRegistryType | undefined\r\n\r\nexport const REGISTRY_FINALIZE_AFTER = 10_000\r\nexport const REGISTRY_SWEEP_INTERVAL = 10_000\r\n\r\nexport class TimerBasedFinalizationRegistry<T> implements FinalizationRegistryType<T> {\r\n    private registrations: Map<unknown, { value: T; registeredAt: number }> = new Map()\r\n    private sweepTimeout: ReturnType<typeof setTimeout> | undefined\r\n\r\n    constructor(private readonly finalize: (value: T) => void) {}\r\n\r\n    // Token is actually required with this impl\r\n    register(target: object, value: T, token?: object) {\r\n        this.registrations.set(token, {\r\n            value,\r\n            registeredAt: Date.now()\r\n        })\r\n        this.scheduleSweep()\r\n    }\r\n\r\n    unregister(token: unknown) {\r\n        this.registrations.delete(token)\r\n    }\r\n\r\n    // Bound so it can be used directly as setTimeout callback.\r\n    sweep = (maxAge = REGISTRY_FINALIZE_AFTER) => {\r\n        // cancel timeout so we can force sweep anytime\r\n        clearTimeout(this.sweepTimeout)\r\n        this.sweepTimeout = undefined\r\n\r\n        const now = Date.now()\r\n        this.registrations.forEach((registration, token) => {\r\n            if (now - registration.registeredAt >= maxAge) {\r\n                this.finalize(registration.value)\r\n                this.registrations.delete(token)\r\n            }\r\n        })\r\n\r\n        if (this.registrations.size > 0) {\r\n            this.scheduleSweep()\r\n        }\r\n    }\r\n\r\n    // Bound so it can be exported directly as clearTimers test utility.\r\n    finalizeAllImmediately = () => {\r\n        this.sweep(0)\r\n    }\r\n\r\n    private scheduleSweep() {\r\n        if (this.sweepTimeout === undefined) {\r\n            this.sweepTimeout = setTimeout(this.sweep, REGISTRY_SWEEP_INTERVAL)\r\n        }\r\n    }\r\n}\r\n\r\nexport const UniversalFinalizationRegistry =\r\n    typeof FinalizationRegistry !== \"undefined\"\r\n        ? FinalizationRegistry\r\n        : TimerBasedFinalizationRegistry\r\n", "import { Reaction } from \"mobx\"\r\nimport { UniversalFinalizationRegistry } from \"./UniversalFinalizationRegistry\"\r\n\r\nexport const observerFinalizationRegistry = new UniversalFinalizationRegistry(\r\n    (adm: { reaction: Reaction | null }) => {\r\n        adm.reaction?.dispose()\r\n        adm.reaction = null\r\n    }\r\n)\r\n", "import { forwardRef, memo } from \"react\"\r\n\r\nimport { isUsingStaticRendering } from \"./staticRendering\"\r\nimport { useObserver } from \"./useObserver\"\r\n\r\nlet warnObserverOptionsDeprecated = true\r\nlet warnLegacyContextTypes = true\r\n\r\nconst hasSymbol = typeof Symbol === \"function\" && Symbol.for\r\nconst isFunctionNameConfigurable =\r\n    Object.getOwnPropertyDescriptor(() => {}, \"name\")?.configurable ?? false\r\n\r\n// Using react-is had some issues (and operates on elements, not on types), see #608 / #609\r\nconst ReactForwardRefSymbol = hasSymbol\r\n    ? Symbol.for(\"react.forward_ref\")\r\n    : typeof forwardRef === \"function\" && forwardRef((props: any) => null)[\"$$typeof\"]\r\n\r\nconst ReactMemoSymbol = hasSymbol\r\n    ? Symbol.for(\"react.memo\")\r\n    : typeof memo === \"function\" && memo((props: any) => null)[\"$$typeof\"]\r\n\r\n/**\r\n * @deprecated Observer options will be removed in the next major version of mobx-react-lite.\r\n * Look at the individual properties for alternatives.\r\n */\r\nexport interface IObserverOptions {\r\n    /**\r\n     * @deprecated Pass a `React.forwardRef` component to observer instead of using the options object\r\n     * e.g. `observer(React.forwardRef(fn))`\r\n     */\r\n    readonly forwardRef?: boolean\r\n}\r\n\r\nexport function observer<P extends object, TRef = {}>(\r\n    baseComponent: React.ForwardRefRenderFunction<TRef, P>,\r\n    options: IObserverOptions & {\r\n        /**\r\n         * @deprecated Pass a `React.forwardRef` component to observer instead of using the options object\r\n         * e.g. `observer(React.forwardRef(fn))`\r\n         */\r\n        forwardRef: true\r\n    }\r\n): React.MemoExoticComponent<\r\n    React.ForwardRefExoticComponent<React.PropsWithoutRef<P> & React.RefAttributes<TRef>>\r\n>\r\n\r\nexport function observer<P extends object, TRef = {}>(\r\n    baseComponent: React.ForwardRefExoticComponent<\r\n        React.PropsWithoutRef<P> & React.RefAttributes<TRef>\r\n    >\r\n): React.MemoExoticComponent<\r\n    React.ForwardRefExoticComponent<React.PropsWithoutRef<P> & React.RefAttributes<TRef>>\r\n>\r\n\r\nexport function observer<P extends object>(\r\n    baseComponent: React.FunctionComponent<P>,\r\n    options?: IObserverOptions\r\n): React.FunctionComponent<P>\r\n\r\nexport function observer<\r\n    C extends React.FunctionComponent<any> | React.ForwardRefRenderFunction<any>,\r\n    Options extends IObserverOptions\r\n>(\r\n    baseComponent: C,\r\n    options?: Options\r\n): Options extends { forwardRef: true }\r\n    ? C extends React.ForwardRefRenderFunction<infer TRef, infer P>\r\n        ? C &\r\n              React.MemoExoticComponent<\r\n                  React.ForwardRefExoticComponent<\r\n                      React.PropsWithoutRef<P> & React.RefAttributes<TRef>\r\n                  >\r\n              >\r\n        : never /* forwardRef set for a non forwarding component */\r\n    : C & { displayName: string }\r\n\r\n// n.b. base case is not used for actual typings or exported in the typing files\r\nexport function observer<P extends object, TRef = {}>(\r\n    baseComponent:\r\n        | React.ForwardRefRenderFunction<TRef, P>\r\n        | React.FunctionComponent<P>\r\n        | React.ForwardRefExoticComponent<React.PropsWithoutRef<P> & React.RefAttributes<TRef>>,\r\n    // TODO remove in next major\r\n    options?: IObserverOptions\r\n) {\r\n    if (process.env.NODE_ENV !== \"production\" && warnObserverOptionsDeprecated && options) {\r\n        warnObserverOptionsDeprecated = false\r\n        console.warn(\r\n            `[mobx-react-lite] \\`observer(fn, { forwardRef: true })\\` is deprecated, use \\`observer(React.forwardRef(fn))\\``\r\n        )\r\n    }\r\n\r\n    if (ReactMemoSymbol && baseComponent[\"$$typeof\"] === ReactMemoSymbol) {\r\n        throw new Error(\r\n            `[mobx-react-lite] You are trying to use \\`observer\\` on a function component wrapped in either another \\`observer\\` or \\`React.memo\\`. The observer already applies 'React.memo' for you.`\r\n        )\r\n    }\r\n\r\n    // The working of observer is explained step by step in this talk: https://www.youtube.com/watch?v=cPF4iBedoF0&feature=youtu.be&t=1307\r\n    if (isUsingStaticRendering()) {\r\n        return baseComponent\r\n    }\r\n\r\n    let useForwardRef = options?.forwardRef ?? false\r\n    let render = baseComponent\r\n\r\n    const baseComponentName = baseComponent.displayName || baseComponent.name\r\n\r\n    // If already wrapped with forwardRef, unwrap,\r\n    // so we can patch render and apply memo\r\n    if (ReactForwardRefSymbol && baseComponent[\"$$typeof\"] === ReactForwardRefSymbol) {\r\n        useForwardRef = true\r\n        render = baseComponent[\"render\"]\r\n        if (typeof render !== \"function\") {\r\n            throw new Error(\r\n                `[mobx-react-lite] \\`render\\` property of ForwardRef was not a function`\r\n            )\r\n        }\r\n    }\r\n\r\n    let observerComponent = (props: any, ref: React.Ref<TRef>) => {\r\n        return useObserver(() => render(props, ref), baseComponentName)\r\n    }\r\n\r\n    // Inherit original name and displayName, see #3438\r\n    ;(observerComponent as React.FunctionComponent).displayName = baseComponent.displayName\r\n\r\n    if (isFunctionNameConfigurable) {\r\n        Object.defineProperty(observerComponent, \"name\", {\r\n            value: baseComponent.name,\r\n            writable: true,\r\n            configurable: true\r\n        })\r\n    }\r\n\r\n    // Support legacy context: `contextTypes` must be applied before `memo`\r\n    if ((baseComponent as any).contextTypes) {\r\n        ;(observerComponent as React.FunctionComponent).contextTypes = (\r\n            baseComponent as any\r\n        ).contextTypes\r\n\r\n        if (process.env.NODE_ENV !== \"production\" && warnLegacyContextTypes) {\r\n            warnLegacyContextTypes = false\r\n            console.warn(\r\n                `[mobx-react-lite] Support for Legacy Context in function components will be removed in the next major release.`\r\n            )\r\n        }\r\n    }\r\n\r\n    if (useForwardRef) {\r\n        // `forwardRef` must be applied prior `memo`\r\n        // `forwardRef(observer(cmp))` throws:\r\n        // \"forwardRef requires a render function but received a `memo` component. Instead of forwardRef(memo(...)), use memo(forwardRef(...))\"\r\n        observerComponent = forwardRef(observerComponent)\r\n    }\r\n\r\n    // memo; we are not interested in deep updates\r\n    // in props; we assume that if deep objects are changed,\r\n    // this is in observables, which would have been tracked anyway\r\n    observerComponent = memo(observerComponent)\r\n\r\n    copyStaticProperties(baseComponent, observerComponent)\r\n\r\n    if (\"production\" !== process.env.NODE_ENV) {\r\n        Object.defineProperty(observerComponent, \"contextTypes\", {\r\n            set() {\r\n                throw new Error(\r\n                    `[mobx-react-lite] \\`${\r\n                        this.displayName || this.type?.displayName || this.type?.name || \"Component\"\r\n                    }.contextTypes\\` must be set before applying \\`observer\\`.`\r\n                )\r\n            }\r\n        })\r\n    }\r\n\r\n    return observerComponent\r\n}\r\n\r\n// based on https://github.com/mridgway/hoist-non-react-statics/blob/master/src/index.js\r\nconst hoistBlackList: any = {\r\n    $$typeof: true,\r\n    render: true,\r\n    compare: true,\r\n    type: true,\r\n    // Don't redefine `displayName`,\r\n    // it's defined as getter-setter pair on `memo` (see #3192).\r\n    displayName: true\r\n}\r\n\r\nfunction copyStaticProperties(base: any, target: any) {\r\n    Object.keys(base).forEach(key => {\r\n        if (!hoistBlackList[key]) {\r\n            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(base, key)!)\r\n        }\r\n    })\r\n}\r\n", "import { useObserver } from \"./useObserver\"\r\n\r\n// TODO: this type could be improved in the next major release:\r\n// type IObserverProps = { children: () => React.ReactNode, render?: never } | { children?: never, render: () => React.ReactNode }\r\ninterface IObserverProps {\r\n    children?(): React.ReactElement | null\r\n    render?(): React.ReactElement | null\r\n}\r\n\r\nfunction ObserverComponent({ children, render }: IObserverProps) {\r\n    if (children && render) {\r\n        console.error(\r\n            \"MobX Observer: Do not use children and render in the same time in `Observer`\"\r\n        )\r\n    }\r\n    const component = children || render\r\n    if (typeof component !== \"function\") {\r\n        return null\r\n    }\r\n    return useObserver(component)\r\n}\r\nif (\"production\" !== process.env.NODE_ENV) {\r\n    ObserverComponent.propTypes = {\r\n        children: ObserverPropsCheck,\r\n        render: ObserverPropsCheck\r\n    }\r\n}\r\nObserverComponent.displayName = \"Observer\"\r\n\r\nexport { ObserverComponent as Observer }\r\n\r\nfunction ObserverPropsCheck(\r\n    props: { [k: string]: any },\r\n    key: string,\r\n    componentName: string,\r\n    location: any,\r\n    propFullName: string\r\n) {\r\n    const extraKey = key === \"children\" ? \"render\" : \"children\"\r\n    const hasProp = typeof props[key] === \"function\"\r\n    const hasExtraProp = typeof props[extraKey] === \"function\"\r\n    if (hasProp && hasExtraProp) {\r\n        return new Error(\r\n            \"MobX Observer: Do not use children and render in the same time in`\" + componentName\r\n        )\r\n    }\r\n\r\n    if (hasProp || hasExtraProp) {\r\n        return null\r\n    }\r\n    return new Error(\r\n        \"Invalid prop `\" +\r\n            propFullName +\r\n            \"` of type `\" +\r\n            typeof props[key] +\r\n            \"` supplied to\" +\r\n            \" `\" +\r\n            componentName +\r\n            \"`, expected `function`.\"\r\n    )\r\n}\r\n", "import { observable, AnnotationsMap } from \"mobx\"\r\nimport { useState } from \"react\"\r\n\r\nexport function useLocalObservable<TStore extends Record<string, any>>(\r\n    initializer: () => TStore,\r\n    annotations?: AnnotationsMap<TStore, never>\r\n): TStore {\r\n    return useState(() => observable(initializer(), annotations, { autoBind: true }))[0]\r\n}\r\n", "import { observable } from \"mobx\"\r\nimport { useState } from \"react\"\r\n\r\nimport { useDeprecated } from \"./utils/utils\"\r\nimport { useAsObservableSource } from \"./useAsObservableSource\"\r\n\r\nexport function useLocalStore<TStore extends Record<string, any>>(initializer: () => TStore): TStore\r\nexport function useLocalStore<TStore extends Record<string, any>, TSource extends object>(\r\n    initializer: (source: TSource) => TStore,\r\n    current: TSource\r\n): TStore\r\nexport function useLocalStore<TStore extends Record<string, any>, TSource extends object>(\r\n    initializer: (source?: TSource) => TStore,\r\n    current?: TSource\r\n): TStore {\r\n    if (\"production\" !== process.env.NODE_ENV) {\r\n        useDeprecated(\r\n            \"[mobx-react-lite] 'useLocalStore' is deprecated, use 'useLocalObservable' instead.\"\r\n        )\r\n    }\r\n    const source = current && useAsObservableSource(current)\r\n    return useState(() => observable(initializer(source), undefined, { autoBind: true }))[0]\r\n}\r\n", "import { useDeprecated } from \"./utils/utils\"\r\nimport { observable, runInAction } from \"mobx\"\r\nimport { useState } from \"react\"\r\n\r\nexport function useAsObservableSource<TSource extends object>(current: TSource): TSource {\r\n    if (\"production\" !== process.env.NODE_ENV)\r\n        useDeprecated(\r\n            \"[mobx-react-lite] 'useAsObservableSource' is deprecated, please store the values directly in an observable, for example by using 'useLocalObservable', and sync future updates using 'useEffect' when needed. See the README for examples.\"\r\n        )\r\n    // We're deliberately not using idiomatic destructuring for the hook here.\r\n    // Accessing the state value as an array element prevents TypeScript from generating unnecessary helpers in the resulting code.\r\n    // For further details, please refer to mobxjs/mobx#3842.\r\n    const res = useState(() => observable(current, {}, { deep: false }))[0]\r\n    runInAction(() => {\r\n        Object.assign(res, current)\r\n    })\r\n    return res\r\n}\r\n", "import \"./utils/assertEnvironment\"\r\n\r\nimport { unstable_batchedUpdates as batch } from \"./utils/reactBatchedUpdates\"\r\nimport { observerBatching } from \"./utils/observerBatching\"\r\nimport { useDeprecated } from \"./utils/utils\"\r\nimport { useObserver as useObserverOriginal } from \"./useObserver\"\r\nimport { enableStaticRendering } from \"./staticRendering\"\r\nimport { observerFinalizationRegistry } from \"./utils/observerFinalizationRegistry\"\r\n\r\nobserverBatching(batch)\r\n\r\nexport { isUsingStaticRendering, enableStaticRendering } from \"./staticRendering\"\r\nexport { observer, IObserverOptions } from \"./observer\"\r\nexport { Observer } from \"./ObserverComponent\"\r\nexport { useLocalObservable } from \"./useLocalObservable\"\r\nexport { useLocalStore } from \"./useLocalStore\"\r\nexport { useAsObservableSource } from \"./useAsObservableSource\"\r\n\r\nexport { observerFinalizationRegistry as _observerFinalizationRegistry }\r\nexport const clearTimers = observerFinalizationRegistry[\"finalizeAllImmediately\"] ?? (() => {})\r\n\r\nexport function useObserver<T>(fn: () => T, baseComponentName: string = \"observed\"): T {\r\n    if (\"production\" !== process.env.NODE_ENV) {\r\n        useDeprecated(\r\n            \"[mobx-react-lite] 'useObserver(fn)' is deprecated. Use `<Observer>{fn}</Observer>` instead, or wrap the entire component in `observer`.\"\r\n        )\r\n    }\r\n    return useObserverOriginal(fn, baseComponentName)\r\n}\r\n\r\nexport { isObserverBatched, observerBatching } from \"./utils/observerBatching\"\r\n\r\nexport function useStaticRendering(enable: boolean) {\r\n    if (\"production\" !== process.env.NODE_ENV) {\r\n        console.warn(\r\n            \"[mobx-react-lite] 'useStaticRendering' is deprecated, use 'enableStaticRendering' instead\"\r\n        )\r\n    }\r\n    enableStaticRendering(enable)\r\n}\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAWA,KACG,WAAY;AACX,eAAS,GAAG,GAAG,GAAG;AAChB,eAAQ,MAAM,MAAM,MAAM,KAAK,IAAI,MAAM,IAAI,MAAQ,MAAM,KAAK,MAAM;AAAA,MACxE;AACA,eAAS,uBAAuB,WAAW,aAAa;AACtD,6BACE,WAAWA,OAAM,oBACf,oBAAoB,MACtB,QAAQ;AAAA,UACN;AAAA,QACF;AACF,YAAI,QAAQ,YAAY;AACxB,YAAI,CAAC,4BAA4B;AAC/B,cAAI,cAAc,YAAY;AAC9B,mBAAS,OAAO,WAAW,MACxB,QAAQ;AAAA,YACP;AAAA,UACF,GACC,6BAA6B;AAAA,QAClC;AACA,sBAAcC,UAAS;AAAA,UACrB,MAAM,EAAE,OAAc,YAAyB;AAAA,QACjD,CAAC;AACD,YAAI,OAAO,YAAY,CAAC,EAAE,MACxB,cAAc,YAAY,CAAC;AAC7B;AAAA,UACE,WAAY;AACV,iBAAK,QAAQ;AACb,iBAAK,cAAc;AACnB,mCAAuB,IAAI,KAAK,YAAY,EAAE,KAAW,CAAC;AAAA,UAC5D;AAAA,UACA,CAAC,WAAW,OAAO,WAAW;AAAA,QAChC;AACA;AAAA,UACE,WAAY;AACV,mCAAuB,IAAI,KAAK,YAAY,EAAE,KAAW,CAAC;AAC1D,mBAAO,UAAU,WAAY;AAC3B,qCAAuB,IAAI,KAAK,YAAY,EAAE,KAAW,CAAC;AAAA,YAC5D,CAAC;AAAA,UACH;AAAA,UACA,CAAC,SAAS;AAAA,QACZ;AACA,sBAAc,KAAK;AACnB,eAAO;AAAA,MACT;AACA,eAAS,uBAAuB,MAAM;AACpC,YAAI,oBAAoB,KAAK;AAC7B,eAAO,KAAK;AACZ,YAAI;AACF,cAAI,YAAY,kBAAkB;AAClC,iBAAO,CAAC,SAAS,MAAM,SAAS;AAAA,QAClC,SAAS,OAAO;AACd,iBAAO;AAAA,QACT;AAAA,MACF;AACA,eAAS,uBAAuB,WAAW,aAAa;AACtD,eAAO,YAAY;AAAA,MACrB;AACA,sBAAgB,OAAO,kCACrB,eACE,OAAO,+BAA+B,+BACxC,+BAA+B,4BAA4B,MAAM,CAAC;AACpE,UAAID,SAAQ,iBACV,WAAW,eAAe,OAAO,OAAO,KAAK,OAAO,KAAK,IACzDC,YAAWD,OAAM,UACjB,YAAYA,OAAM,WAClB,kBAAkBA,OAAM,iBACxB,gBAAgBA,OAAM,eACtB,oBAAoB,OACpB,6BAA6B,OAC7B,OACE,gBAAgB,OAAO,UACvB,gBAAgB,OAAO,OAAO,YAC9B,gBAAgB,OAAO,OAAO,SAAS,gBACnC,yBACA;AACR,cAAQ,uBACN,WAAWA,OAAM,uBAAuBA,OAAM,uBAAuB;AACvE,sBAAgB,OAAO,kCACrB,eACE,OAAO,+BAA+B,8BACxC,+BAA+B,2BAA2B,MAAM,CAAC;AAAA,IACrE,GAAG;AAAA;AAAA;;;AC9FL;AAAA;AAAA;AAEA,QAAI,OAAuC;AACzC,aAAO,UAAU;AAAA,IACnB,OAAO;AACL,aAAO,UAAU;AAAA,IACnB;AAAA;AAAA;;;ACLA,mBAAyB;AAEzB,IAAI,CAAC,uBAAU;AACX,QAAM,IAAI,MAAM,mDAAmD;AACvE;AACA,IAAI,CAAC,gBAAgB;AACjB,QAAM,IAAI,MAAM,oEAAoE;AACxF;;;ACRA,uBAAwC;;;ACElC,SAAU,iBAAiB,UAAoB;AACjD,WAAQ;AACZ;AAEM,SAAU,iBAAiB,mBAAsB;AACnD,MAAI,CAAC,mBAAmB;AACpB,wBAAoB;AACpB,QAAI,MAAuC;AACvC,cAAQ,KACJ,6EAA6E;IAErF;EACJ;AACA,YAAU,EAAE,kBAAiB,CAAE;AACnC;AAEO,IAAM,oBAAoB,WAAA;AAC7B,MAAI,MAAuC;AACvC,YAAQ,KAAK,mBAAmB;EACpC;AAEA,SAAO;AACX;;;ACxBA,IAAM,qBAA+B,CAAA;AAE/B,SAAU,cAAc,KAAW;AACrC,MAAI,CAAC,mBAAmB,SAAS,GAAG,GAAG;AACnC,uBAAmB,KAAK,GAAG;AAC3B,YAAQ,KAAK,GAAG;EACpB;AACJ;;;ACNA,IAAAE,gBAAkB;;;ACCZ,SAAU,gBAAgB,GAAW;AACvC,SAAO,kBAAkB,CAAC;AAC9B;;;ACJA,IAAI,+BAA+B;AAE7B,SAAU,sBAAsB,QAAe;AACjD,iCAA+B;AACnC;AAEM,SAAU,yBAAsB;AAClC,SAAO;AACX;;;ACAO,IAAM,0BAA0B;AAChC,IAAM,0BAA0B;AAEvC,IAAA;;EAAA,WAAA;AAII,aAAAC,gCAA6B,UAA4B;AAAzD,UAAA,QAAA;AAAY,aAAA,eAAA,MAAA,YAAA;;;;eAAiB;;AAHrB,aAAA,eAAA,MAAA,iBAAA;;;;eAAkE,oBAAI,IAAG;;AACzE,aAAA,eAAA,MAAA,gBAAA;;;;;;AAkBR,aAAA,eAAA,MAAA,SAAA;;;;eAAQ,SAAC,QAAgC;AAAhC,cAAA,WAAA,QAAA;AAAA,qBAAA;UAAgC;AAErC,uBAAa,MAAK,YAAY;AAC9B,gBAAK,eAAe;AAEpB,cAAM,MAAM,KAAK,IAAG;AACpB,gBAAK,cAAc,QAAQ,SAAC,cAAc,OAAK;AAC3C,gBAAI,MAAM,aAAa,gBAAgB,QAAQ;AAC3C,oBAAK,SAAS,aAAa,KAAK;AAChC,oBAAK,cAAc,OAAO,KAAK;YACnC;UACJ,CAAC;AAED,cAAI,MAAK,cAAc,OAAO,GAAG;AAC7B,kBAAK,cAAa;UACtB;QACJ;;AAGA,aAAA,eAAA,MAAA,0BAAA;;;;eAAyB,WAAA;AACrB,gBAAK,MAAM,CAAC;QAChB;;IArC4D;;;;;aAG5D,SAAS,QAAgB,OAAU,OAAc;AAC7C,aAAK,cAAc,IAAI,OAAO;UAC1B;UACA,cAAc,KAAK,IAAG;SACzB;AACD,aAAK,cAAa;MACtB;;;;;;aAEA,SAAW,OAAc;AACrB,aAAK,cAAc,OAAO,KAAK;MACnC;;;;;;aA0BA,WAAA;AACI,YAAI,KAAK,iBAAiB,QAAW;AACjC,eAAK,eAAe,WAAW,KAAK,OAAO,uBAAuB;QACtE;MACJ;;AACJ,WAAAA;EAAA,EAhDA;;AAkDO,IAAM,gCACT,OAAO,yBAAyB,cAC1B,uBACA;;;AC7DH,IAAM,+BAA+B,IAAI,8BAC5C,SAAC,KAAkC;;AAC/B,GAAAC,MAAA,IAAI,cAAQ,QAAAA,QAAA,SAAA,SAAAA,IAAE,QAAO;AACrB,MAAI,WAAW;AACnB,CAAC;;;AJFL,kBAAqC;AAmBrC,SAAS,eAAe,KAA2B;AAC/C,MAAI,WAAW,IAAI,SAAS,WAAA,OAAW,IAAI,IAAI,GAAI,WAAA;;AAC/C,QAAI,eAAe,OAAM;AAIzB,KAAAC,MAAA,IAAI,mBAAa,QAAAA,QAAA,SAAA,SAAAA,IAAA,KAAA,GAAA;EACrB,CAAC;AACL;AAEM,SAAU,YAAe,QAAiB,mBAAsC;AAAtC,MAAA,sBAAA,QAAA;AAAA,wBAAA;EAAsC;AAClF,MAAI,uBAAsB,GAAI;AAC1B,WAAO,OAAM;EACjB;AAEA,MAAM,SAAS,cAAAC,QAAM,OAAsC,IAAI;AAE/D,MAAI,CAAC,OAAO,SAAS;AAEjB,QAAM,QAA8B;MAChC,UAAU;MACV,eAAe;MACf,cAAc,OAAM;MACpB,MAAM;MACN,WAAS,SAAC,eAAyB;AAE/B,qCAA6B,WAAW,KAAG;AAC3C,cAAI,gBAAgB;AACpB,YAAI,CAAC,MAAI,UAAU;AAMf,yBAAe,KAAG;AAGlB,gBAAI,eAAe,OAAM;QAC7B;AAEA,eAAO,WAAA;;AAEH,gBAAI,gBAAgB;AACpB,WAAAD,MAAA,MAAI,cAAQ,QAAAA,QAAA,SAAA,SAAAA,IAAE,QAAO;AACrB,gBAAI,WAAW;QACnB;MACJ;MACA,aAAW,WAAA;AAEP,eAAO,MAAI;MACf;;AAGJ,WAAO,UAAU;EACrB;AAEA,MAAM,MAAM,OAAO;AAEnB,MAAI,CAAC,IAAI,UAAU;AAEf,mBAAe,GAAG;AAIlB,iCAA6B,SAAS,QAAQ,KAAK,GAAG;EAC1D;AAEA,gBAAAC,QAAM,cAAc,IAAI,UAAW,eAAe;AAElD;;IAEI,IAAI;IACJ,IAAI;IACJ,IAAI;EAAW;AAMnB,MAAI;AACJ,MAAI;AACJ,MAAI,SAAU,MAAM,WAAA;AAChB,QAAI;AACA,qBAAe,OAAM;IACzB,SAAS,GAAG;AACR,kBAAY;IAChB;EACJ,CAAC;AAED,MAAI,WAAW;AACX,UAAM;EACV;AAEA,SAAO;AACX;;;AKtHA,IAAAC,gBAAiC;;;AAKjC,IAAI,gCAAgC;AACpC,IAAI,yBAAyB;AAE7B,IAAM,YAAY,OAAO,WAAW,cAAc,OAAO;AACzD,IAAM,8BACF,MAAA,KAAA,OAAO,yBAAyB,WAAA;AAAO,GAAG,MAAM,OAAC,QAAA,OAAA,SAAA,SAAA,GAAE,kBAAY,QAAA,OAAA,SAAA,KAAI;AAGvE,IAAM,wBAAwB,YACxB,OAAO,IAAI,mBAAmB,IAC9B,OAAO,6BAAe,kBAAc,0BAAW,SAAC,OAAU;AAAK,SAAA;AAAA,CAAI,EAAE,UAAU;AAErF,IAAM,kBAAkB,YAClB,OAAO,IAAI,YAAY,IACvB,OAAO,uBAAS,kBAAc,oBAAK,SAAC,OAAU;AAAK,SAAA;AAAA,CAAI,EAAE,UAAU;AA0DnE,SAAU,SACZ,eAKA,SAA0B;;AAE1B,MAA6C,iCAAiC,SAAS;AACnF,oCAAgC;AAChC,YAAQ,KACJ,4GAAgH;EAExH;AAEA,MAAI,mBAAmB,cAAc,UAAU,MAAM,iBAAiB;AAClE,UAAM,IAAI,MACN,qLAA2L;EAEnM;AAGA,MAAI,uBAAsB,GAAI;AAC1B,WAAO;EACX;AAEA,MAAI,iBAAgBC,MAAA,YAAO,QAAP,YAAO,SAAA,SAAP,QAAS,gBAAU,QAAAA,QAAA,SAAAA,MAAI;AAC3C,MAAI,SAAS;AAEb,MAAM,oBAAoB,cAAc,eAAe,cAAc;AAIrE,MAAI,yBAAyB,cAAc,UAAU,MAAM,uBAAuB;AAC9E,oBAAgB;AAChB,aAAS,cAAc,QAAQ;AAC/B,QAAI,OAAO,WAAW,YAAY;AAC9B,YAAM,IAAI,MACN,sEAAwE;IAEhF;EACJ;AAEA,MAAI,oBAAoB,SAAC,OAAY,KAAoB;AACrD,WAAO,YAAY,WAAA;AAAM,aAAA,OAAO,OAAO,GAAG;IAAjB,GAAoB,iBAAiB;EAClE;AAGE,oBAA8C,cAAc,cAAc;AAE5E,MAAI,4BAA4B;AAC5B,WAAO,eAAe,mBAAmB,QAAQ;MAC7C,OAAO,cAAc;MACrB,UAAU;MACV,cAAc;KACjB;EACL;AAGA,MAAK,cAAsB,cAAc;AACrC;AAAE,sBAA8C,eAC5C,cACF;AAEF,QAA6C,wBAAwB;AACjE,+BAAyB;AACzB,cAAQ,KACJ,gHAAgH;IAExH;EACJ;AAEA,MAAI,eAAe;AAIf,4BAAoB,0BAAW,iBAAiB;EACpD;AAKA,0BAAoB,oBAAK,iBAAiB;AAE1C,uBAAqB,eAAe,iBAAiB;AAErD,MAAI,MAAuC;AACvC,WAAO,eAAe,mBAAmB,gBAAgB;MACrD,KAAG,WAAA;;AACC,cAAM,IAAI,MACN,sBAAA,OACI,KAAK,iBAAeA,MAAA,KAAK,UAAI,QAAAA,QAAA,SAAA,SAAAA,IAAE,kBAAeC,MAAA,KAAK,UAAI,QAAAA,QAAA,SAAA,SAAAA,IAAE,SAAQ,aAAW,wDAAA,CACrB;MAEnE;KACH;EACL;AAEA,SAAO;AACX;AAGA,IAAM,iBAAsB;EACxB,UAAU;EACV,QAAQ;EACR,SAAS;EACT,MAAM;;;EAGN,aAAa;;AAGjB,SAAS,qBAAqB,MAAW,QAAW;AAChD,SAAO,KAAK,IAAI,EAAE,QAAQ,SAAA,KAAG;AACzB,QAAI,CAAC,eAAe,GAAG,GAAG;AACtB,aAAO,eAAe,QAAQ,KAAK,OAAO,yBAAyB,MAAM,GAAG,CAAE;IAClF;EACJ,CAAC;AACL;;;AC1LA,SAAS,kBAAkBC,KAAoC;MAAlC,WAAQA,IAAA,UAAE,SAAMA,IAAA;AACzC,MAAI,YAAY,QAAQ;AACpB,YAAQ,MACJ,8EAA8E;EAEtF;AACA,MAAM,YAAY,YAAY;AAC9B,MAAI,OAAO,cAAc,YAAY;AACjC,WAAO;EACX;AACA,SAAO,YAAY,SAAS;AAChC;AACA,IAAI,MAAuC;AACvC,oBAAkB,YAAY;IAC1B,UAAU;IACV,QAAQ;;AAEhB;AACA,kBAAkB,cAAc;AAIhC,SAAS,mBACL,OACA,KACA,eACA,UACA,cAAoB;AAEpB,MAAM,WAAW,QAAQ,aAAa,WAAW;AACjD,MAAM,UAAU,OAAO,MAAM,GAAG,MAAM;AACtC,MAAM,eAAe,OAAO,MAAM,QAAQ,MAAM;AAChD,MAAI,WAAW,cAAc;AACzB,WAAO,IAAI,MACP,uEAAuE,aAAa;EAE5F;AAEA,MAAI,WAAW,cAAc;AACzB,WAAO;EACX;AACA,SAAO,IAAI,MACP,mBACI,eACA,gBACA,OAAO,MAAM,GAAG,IAChB,oBAEA,gBACA,yBAAyB;AAErC;;;AC3DA,IAAAC,gBAAyB;AAEnB,SAAU,mBACZ,aACA,aAA2C;AAE3C,aAAO,wBAAS,WAAA;AAAM,WAAA,WAAW,YAAW,GAAI,aAAa,EAAE,UAAU,KAAI,CAAE;EAAzD,CAA0D,EAAE,CAAC;AACvF;;;ACPA,IAAAC,gBAAyB;;;ACCzB,IAAAC,gBAAyB;AAEnB,SAAU,sBAA8C,SAAgB;AAC1E,MAAI;AACA,kBACI,4OAA4O;AAKpP,MAAM,UAAM,wBAAS,WAAA;AAAM,WAAA,WAAW,SAAS,CAAA,GAAI,EAAE,MAAM,MAAK,CAAE;EAAvC,CAAwC,EAAE,CAAC;AACtE,cAAY,WAAA;AACR,WAAO,OAAO,KAAK,OAAO;EAC9B,CAAC;AACD,SAAO;AACX;;;ADNM,SAAU,cACZ,aACA,SAAiB;AAEjB,MAAI,MAAuC;AACvC,kBACI,oFAAoF;EAE5F;AACA,MAAM,SAAS,WAAW,sBAAsB,OAAO;AACvD,aAAO,wBAAS,WAAA;AAAM,WAAA,WAAW,YAAY,MAAM,GAAG,QAAW,EAAE,UAAU,KAAI,CAAE;EAA7D,CAA8D,EAAE,CAAC;AAC3F;;;;AEbA,iBAAiB,wCAAK;AAUf,IAAM,eAAcC,MAAA,6BAA6B,wBAAwB,OAAC,QAAAA,QAAA,SAAAA,MAAK,WAAA;AAAO;AAEvF,SAAUC,aAAe,IAAa,mBAAsC;AAAtC,MAAA,sBAAA,QAAA;AAAA,wBAAA;EAAsC;AAC9E,MAAI,MAAuC;AACvC,kBACI,yIAAyI;EAEjJ;AACA,SAAO,YAAoB,IAAI,iBAAiB;AACpD;AAIM,SAAU,mBAAmB,QAAe;AAC9C,MAAI,MAAuC;AACvC,YAAQ,KACJ,2FAA2F;EAEnG;AACA,wBAAsB,MAAM;AAChC;",
  "names": ["React", "useState", "import_react", "TimerBasedFinalizationRegistry", "_a", "_a", "React", "import_react", "_a", "_b", "_a", "import_react", "import_react", "import_react", "_a", "useObserver"]
}
